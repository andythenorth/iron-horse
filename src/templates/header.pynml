// define the newgrf
grf {
	grfid: "${roster.grfid}";
	name: string(STR_GRF_NAME_VERSIONED);
	desc: string(STR_GRF_DESCRIPTION);
	url: string(STR_GRF_DOCS_URL);
	version: ${git_info.get_revision()};
	min_compatible_version: 5991;
	<!--! note that params are in the order they appear in the OpenTTD UI, *not* the param number -->
	param 2 {
		param_simplified_gameplay {
			name: string(STR_PARAM_SIMPLIFIED_GAMEPLAY);
			desc: string(STR_PARAM_SIMPLIFIED_GAMEPLAY_DESC);
			type: bool;
			def_value: 0;
			bit: 1;
		}
	}
	param 6 {
		param_add_railtypes {
			name: string(STR_PARAM_ADD_RAILTYPES);
			desc: string(STR_PARAM_ADD_RAILTYPES_DESC);
			type: bool;
			def_value: 1;
			bit: 1;
		}
	}
	param 0 {
        param_adjust_vehicle_capacity {
            type: int;
            name: string(STR_PARAM_ADJUST_VEHICLE_CAPACITY);
            desc: string(STR_PARAM_ADJUST_VEHICLE_CAPACITY_DESC);
            min_value: 0;
            max_value: 4;
            def_value: 2;
            names: {
                0: string(STR_PARAM_ADJUST_VEHICLE_CAPACITY_OPTION_0);
                1: string(STR_PARAM_ADJUST_VEHICLE_CAPACITY_OPTION_1);
                2: string(STR_PARAM_ADJUST_VEHICLE_CAPACITY_OPTION_2);
                3: string(STR_PARAM_ADJUST_VEHICLE_CAPACITY_OPTION_3);
                4: string(STR_PARAM_ADJUST_VEHICLE_CAPACITY_OPTION_4);
            };
        }
    }
    <tal:num_options define="num_options 16">
        param 3 {
            param_wagon_base_colour_1 {
                name: string(STR_PARAM_WAGON_BASE_COLOUR_1);
                desc: string(STR_PARAM_WAGON_BASE_COLOUR_DESC);
                type: int;
                min_value: 0;
                max_value: ${num_options - 1};
                def_value: 13; <!--! default to CC brown -->
                names: {
                    <tal:options repeat="option_num range(num_options)">
                        <!--! there is an additiona of 1 here as a value was removed, but I didn't want to adjust all the lang translations -->
                        ${option_num}: string(STR_PARAM_WAGON_BASE_COLOUR_OPTION_${option_num + 1});
                    </tal:options>
                };
            }
        }
        param 4 {
            param_wagon_base_colour_2 {
                name: string(STR_PARAM_WAGON_BASE_COLOUR_2);
                desc: string(STR_PARAM_WAGON_BASE_COLOUR_DESC);
                type: int;
                min_value: 0;
                max_value: ${num_options - 1};
                def_value: 14; <!--! default to CC grey -->
                names: {
                    <tal:options repeat="option_num range(num_options)">
                        <!--! there is an additiona of 1 here as a value was removed, but I didn't want to adjust all the lang translations -->
                        ${option_num}: string(STR_PARAM_WAGON_BASE_COLOUR_OPTION_${option_num + 1});
                    </tal:options>
                };
            }
        }
    </tal:num_options>
	param 5 {
	    <tal:num_options define="num_options 3">
            param_wagon_colour_randomisation_strategy {
                name: string(STR_PARAM_WAGON_COLOUR_RANDOMISATION_STRATEGY);
                desc: string(STR_PARAM_WAGON_COLOUR_RANDOMISATION_STRATEGY_DESC);
                type: int;
                min_value: 0;
                max_value: ${num_options - 1};
                def_value: 0;
                names: {
                    <tal:options repeat="option_num range(num_options)">
                        ${option_num}: string(STR_PARAM_WAGON_COLOUR_RANDOMISATION_STRATEGY_OPTION_${option_num});
                    </tal:options>
                };
            }
        </tal:num_options>
	}
	param 7 {
		param_wagons_only_mode {
			name: string(STR_PARAM_WAGONS_ONLY_MODE);
			desc: string(STR_PARAM_WAGONS_ONLY_MODE_DESC);
			type: bool;
			def_value: 0;
			bit: 1;
		}
	}
}

// error if inflation is on for the game, as it leads to unplayable outcomes for players
// tried 'WARNING' but doesn't seem to show a message, so we'll go with 'FATAL' I guess
if (inflation) {
    error(FATAL, string(STR_ERROR_INFLATION_INCOMPATIBLE));
}

basecost {
 	PR_BUILD_VEHICLE_TRAIN: ${global_constants.PR_BUILD_VEHICLE_TRAIN};
 	PR_BUILD_VEHICLE_WAGON: ${global_constants.PR_BUILD_VEHICLE_WAGON};
 	PR_RUNNING_TRAIN_STEAM: ${global_constants.PR_RUNNING_TRAIN_STEAM};
 	PR_RUNNING_TRAIN_DIESEL: ${global_constants.PR_RUNNING_TRAIN_DIESEL};
 	<!--! electric running cost not used, don't define base cost multiplier -->
}

// disable default trains
disable_item(FEAT_TRAINS, 00, 115);

// sort order
sort(FEAT_TRAINS, [
<tal:foo repeat="consist consists">
    ${','.join([str(unit_variant.numeric_id) for unit_variant in consist.units[0].unit_variants])},
</tal:foo>
]);

// fix depot view for trains
traininfo_y_offset = 2;
train_width_32_px = 1;
