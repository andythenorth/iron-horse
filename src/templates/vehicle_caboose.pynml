<!--! this is the template for caboose cars -->

<!--! 'random_reverse' property is not supported in this template, vehicles using this template are all symmetrical, reversing would do nothing
      'flipped' is user flipping vehicle in depot and *is* supported here (used for livery selection tricks)
      don't conflate them :) -->
// default graphics chain
<tal:livery_variant_nums repeat="livery_variant_num range(consist.gestalt_graphics.num_generations)">
    spriteset(${vehicle.id}_ss_${livery_variant_num}_unflipped, "${graphics_path}${consist.id}.png") {
        ${vehicle.get_spriteset_template_name('unreversed', 'unflipped', 10 + (livery_variant_num * 60))}
    }
    spriteset(${vehicle.id}_ss_${livery_variant_num}_flipped, "${graphics_path}${consist.id}.png") {
        ${vehicle.get_spriteset_template_name('unreversed', 'flipped', 10 + (livery_variant_num * 60) + 30)}
    }

    <!--! handle user flipped state -->
    switch (FEAT_TRAINS, SELF, ${vehicle.id}_switch_graphics_livery_${livery_variant_num}, vehicle_is_flipped) {
        1: return ${vehicle.id}_ss_${livery_variant_num}_flipped;
        return ${vehicle.id}_ss_${livery_variant_num}_unflipped;
    }
</tal:livery_variant_nums>

switch (FEAT_TRAINS, PARENT, ${vehicle.id}_switch_graphics_vehicle_no_consist, current_year) {
    <!--! case where vehicle exists in depot, but not attached to a consist, so use current year, same as buy menu -->
    <tal:livery_variants repeat="date_range consist.roster.intro_date_ranges(consist.base_track_type)">
        ${date_range[0]}..${date_range[1]}: return ${vehicle.id}_switch_graphics_livery_${repeat.date_range.index};
    </tal:livery_variants>
    return ${vehicle.id}_switch_graphics_livery_0;
}


switch (FEAT_TRAINS, PARENT, ${vehicle.id}_switch_graphics_vehicle, vehicle_type_id) {
<!--! this doesn't check grfid currently - add later if needed
      this may also exceed the number of permitted ranges as number of engines increases, if that happens, try sharding (probably by roster) -->
    <tal:livery_engine_ids repeat="engine_consist consist.engine_consists_for_caboose_cars">
        <!--! note that livery variants are zero-indexed, generations are one-indexed -->
        ${engine_consist.id}: return ${vehicle.id}_switch_graphics_livery_${engine_consist.gen - 1};
    </tal:livery_engine_ids>
    return ${vehicle.id}_switch_graphics_vehicle_no_consist;
}

// buy menu graphics chain
<tal:livery_variants repeat="livery_variant_num range(consist.gestalt_graphics.num_generations)">
    spriteset(${vehicle.id}_ss_purchase_${livery_variant_num}, "${graphics_path}${consist.id}.png") {
        ${consist.get_nml_for_spriteset_template(y_offset=livery_variant_num * 60)}
    }
</tal:livery_variants>

<!--! purchase sprites always go through a switch in case the template does anything specific for purchase graphics
      if there was nothing specific, then this would just be a null switch, but in this case we switch livery depending on game year -->
switch (FEAT_TRAINS, SELF, ${vehicle.id}_switch_graphics_purchase, current_year) {
    <tal:livery_variants repeat="date_range consist.roster.intro_date_ranges(consist.base_track_type)">
        ${date_range[0]}..${date_range[1]}: return ${vehicle.id}_ss_purchase_${repeat.date_range.index};
    </tal:livery_variants>
    return ${vehicle.id}_ss_purchase_0;
}

<tal:include metal:use-macro="load: graphics_switches.pynml" />

<tal:optional_capacity_switches condition="vehicle.has_cargo_capacity">
    <tal:include metal:use-macro="load: capacity_switches.pynml" />
</tal:optional_capacity_switches>

<tal:include metal:use-macro="load: properties_vehicle.pynml" />

