<tal:ruleset define="first 0; last 1;">
    // automobile transporter articulated permanent twin set (no default single unit required)
    <!--! first / last; NOTE use of position_in_articulated_veh not position_in_vehid_chain -->
    switch (FEAT_TRAINS, SELF, switch_graphics_automobile_transporter_ruleset_articulated_permanent_twin_sets, position_in_articulated_veh % 2) {
        0: return ${first};
        return ${last};
    }
</tal:ruleset>


<tal:ruleset define="default 0;">
    // automobile transporter 1 unit position switches
    <!--!
        if 1 unit in sequence
        - note that this just yields a constant result and will likely be optimised out by nmlc but eh, consistency with other switches for now
    -->
    switch (FEAT_TRAINS, SELF, switch_graphics_automobile_transporter_ruleset_1_unit_sets, 0) {
        0: return ${default};
    }
</tal:ruleset>

<tal:ruleset define="default 0; first 1; last 2;">
    // automobile transporter 2 unit position switches
    <!--! if 1 unit in sequence -->
    switch (FEAT_TRAINS, SELF, switch_graphics_automobile_transporter_ruleset_2_unit_sets_modulo_num_units_in_consist_1, position_in_vehid_chain % 2) {
        0: return ${default};
    }

    <!--! if 2 units in sequence -->
    switch (FEAT_TRAINS, SELF, switch_graphics_automobile_transporter_ruleset_2_unit_sets_modulo_num_units_in_consist_2, position_in_vehid_chain % 2) {
        0: return ${first};
        return ${last};
    }

    <!--! this is a remainder block, how many units are in it? -->
    switch (FEAT_TRAINS, SELF, switch_graphics_automobile_transporter_ruleset_2_unit_sets_less_than_2_remaining, num_vehs_in_vehid_chain % 2) {
        1: return switch_graphics_automobile_transporter_ruleset_2_unit_sets_modulo_num_units_in_consist_1;
        return switch_graphics_automobile_transporter_ruleset_2_unit_sets_modulo_num_units_in_consist_2;
    }
    switch (FEAT_TRAINS, SELF, switch_graphics_automobile_transporter_ruleset_2_unit_sets, position_in_vehid_chain >= (num_vehs_in_vehid_chain - (num_vehs_in_vehid_chain  % 2))) {
        1: return switch_graphics_automobile_transporter_ruleset_2_unit_sets_less_than_2_remaining;
        return switch_graphics_automobile_transporter_ruleset_2_unit_sets_modulo_num_units_in_consist_2;
    }
</tal:ruleset>

<tal:ruleset define="default 0; first 1; last 2; middle 3;">
    // automobile transporter 4 unit position switches
    <!--! if 1 unit in sequence -->
    <!--! 0 = first, 1 = middle, 2 = last -->
    switch (FEAT_TRAINS, SELF, switch_graphics_automobile_transporter_ruleset_4_unit_sets_modulo_num_units_in_consist_1, position_in_vehid_chain % 4) {
        0: return ${default};
    }

    <!--! if 2 units in sequence -->
    switch (FEAT_TRAINS, SELF, switch_graphics_automobile_transporter_ruleset_4_unit_sets_modulo_num_units_in_consist_2, position_in_vehid_chain % 4) {
        0: return ${first};
        return ${last};
    }

    <!--! if 3 units in sequence -->
    switch (FEAT_TRAINS, SELF, switch_graphics_automobile_transporter_ruleset_4_unit_sets_modulo_num_units_in_consist_3, position_in_vehid_chain % 4) {
        0: return ${first};
        1: return ${middle};
        return ${last};
    }

    <!--! if 4 units in sequence -->
    switch (FEAT_TRAINS, SELF, switch_graphics_automobile_transporter_ruleset_4_unit_sets_modulo_num_units_in_consist_4, position_in_vehid_chain % 4) {
        0: ${first};
        1: ${middle};
        2: ${middle};
        return ${last};
    }

    <!--! this is a remainder block, how many units are in it? -->
    switch (FEAT_TRAINS, SELF, switch_graphics_automobile_transporter_ruleset_4_unit_sets_less_than_4_remaining, num_vehs_in_vehid_chain % 4) {
        1: return switch_graphics_automobile_transporter_ruleset_4_unit_sets_modulo_num_units_in_consist_1;
        2: return switch_graphics_automobile_transporter_ruleset_4_unit_sets_modulo_num_units_in_consist_2;
        3: return switch_graphics_automobile_transporter_ruleset_4_unit_sets_modulo_num_units_in_consist_3;
        return switch_graphics_automobile_transporter_ruleset_4_unit_sets_modulo_num_units_in_consist_4;
    }

    <!--! given the consist, how many blocks of 4 units are there?  Is the unit within a block of 4, or a remainder block? -->
    switch (FEAT_TRAINS, SELF, switch_graphics_automobile_transporter_ruleset_4_unit_sets, position_in_vehid_chain >= (num_vehs_in_vehid_chain - (num_vehs_in_vehid_chain  % 4))) {
        1: return switch_graphics_automobile_transporter_ruleset_4_unit_sets_less_than_4_remaining;
        return switch_graphics_automobile_transporter_ruleset_4_unit_sets_modulo_num_units_in_consist_4;
    }
</tal:ruleset>

<tal:ruleset define="default 0; first 1; last 2;">
    // intermodal platform 2 unit position switches
    <!--! if 1 unit in sequence -->
    switch (FEAT_TRAINS, SELF, switch_graphics_intermodal_platform_ruleset_2_unit_sets_modulo_num_units_in_consist_1, position_in_vehid_chain % 2) {
        0: return ${default};
    }

    <!--! if 2 units in sequence -->
    switch (FEAT_TRAINS, SELF, switch_graphics_intermodal_platform_ruleset_2_unit_sets_modulo_num_units_in_consist_2, position_in_vehid_chain % 2) {
        0: return ${first};
        return ${last};
    }

    <!--! this is a remainder block, how many units are in it? -->
    switch (FEAT_TRAINS, SELF, switch_graphics_intermodal_platform_ruleset_2_unit_sets_less_than_2_remaining, num_vehs_in_vehid_chain % 2) {
        1: return switch_graphics_intermodal_platform_ruleset_2_unit_sets_modulo_num_units_in_consist_1;
        return switch_graphics_intermodal_platform_ruleset_2_unit_sets_modulo_num_units_in_consist_2;
    }
    switch (FEAT_TRAINS, SELF, switch_graphics_intermodal_platform_ruleset_2_unit_sets, position_in_vehid_chain >= (num_vehs_in_vehid_chain - (num_vehs_in_vehid_chain  % 2))) {
        1: return switch_graphics_intermodal_platform_ruleset_2_unit_sets_less_than_2_remaining;
        return switch_graphics_intermodal_platform_ruleset_2_unit_sets_modulo_num_units_in_consist_2;
    }
</tal:ruleset>

<tal:ruleset define="default 0; first 1; last 2; middle 3;">
    // intermodal platform 4 unit position switches
    <!--! if 1 unit in sequence -->
    <!--! 0 = first, 1 = middle, 2 = last -->
    switch (FEAT_TRAINS, SELF, switch_graphics_intermodal_platform_ruleset_4_unit_sets_modulo_num_units_in_consist_1, position_in_vehid_chain % 4) {
        0: return ${default};
    }

    <!--! if 2 units in sequence -->
    switch (FEAT_TRAINS, SELF, switch_graphics_intermodal_platform_ruleset_4_unit_sets_modulo_num_units_in_consist_2, position_in_vehid_chain % 4) {
        0: return ${first};
        return ${last};
    }

    <!--! if 3 units in sequence -->
    switch (FEAT_TRAINS, SELF, switch_graphics_intermodal_platform_ruleset_4_unit_sets_modulo_num_units_in_consist_3, position_in_vehid_chain % 4) {
        0: return ${first};
        1: return ${middle};
        return ${last};
    }

    <!--! if 4 units in sequence -->
    switch (FEAT_TRAINS, SELF, switch_graphics_intermodal_platform_ruleset_4_unit_sets_modulo_num_units_in_consist_4, position_in_vehid_chain % 4) {
        0: ${first};
        1: ${middle};
        2: ${middle};
        return ${last};
    }

    <!--! this is a remainder block, how many units are in it? -->
    switch (FEAT_TRAINS, SELF, switch_graphics_intermodal_platform_ruleset_4_unit_sets_less_than_4_remaining, num_vehs_in_vehid_chain % 4) {
        1: return switch_graphics_intermodal_platform_ruleset_4_unit_sets_modulo_num_units_in_consist_1;
        2: return switch_graphics_intermodal_platform_ruleset_4_unit_sets_modulo_num_units_in_consist_2;
        3: return switch_graphics_intermodal_platform_ruleset_4_unit_sets_modulo_num_units_in_consist_3;
        return switch_graphics_intermodal_platform_ruleset_4_unit_sets_modulo_num_units_in_consist_4;
    }

    <!--! given the consist, how many blocks of 4 units are there?  Is the unit within a block of 4, or a remainder block? -->
    switch (FEAT_TRAINS, SELF, switch_graphics_intermodal_platform_ruleset_4_unit_sets, position_in_vehid_chain >= (num_vehs_in_vehid_chain - (num_vehs_in_vehid_chain  % 4))) {
        1: return switch_graphics_intermodal_platform_ruleset_4_unit_sets_less_than_4_remaining;
        return switch_graphics_intermodal_platform_ruleset_4_unit_sets_modulo_num_units_in_consist_4;
    }
</tal:ruleset>

<tal:ruleset define="default 0; first 1; last 2; special 3;">
    // pax coach position switches
    switch (FEAT_TRAINS, SELF, switch_graphics_pax_car_ruleset_position_default, 0) {
        return ${default};
    }

    <!--! if special -->
    switch (FEAT_TRAINS, SELF, switch_graphics_pax_car_ruleset_position_special_check_length, num_vehs_in_vehid_chain) {
        <!--! don't show 'special' if same id chain < 4 vehicles -->
        0..3: return switch_graphics_pax_car_ruleset_position_default;
        return ${special};
    }
    switch (FEAT_TRAINS, SELF, switch_graphics_pax_car_ruleset_position_check_special, position_in_vehid_chain_from_end - position_in_vehid_chain) {
        0..1: return switch_graphics_pax_car_ruleset_position_special_check_length;
        switch_graphics_pax_car_ruleset_position_default;
    }

    <!--! if last -->
    switch (FEAT_TRAINS, SELF, switch_graphics_pax_car_ruleset_position_check_last_neighbouring, [STORE_TEMP(1, 0x10F), var[0x61, 0, 0x0000FFFF, 0xC6]]) {
        <!--! don't show last if following vehicle is also a valid pax car with a different ID -->
        <tal:pax_car_ids repeat="pax_car_id roster_manager.pax_car_ids">
        ${pax_car_id}: return ${default};
        </tal:pax_car_ids>
        return ${last};
    }
    switch (FEAT_TRAINS, SELF, switch_graphics_pax_car_ruleset_position_check_last, position_in_vehid_chain_from_end) {
        0: switch_graphics_pax_car_ruleset_position_check_last_neighbouring;
        switch_graphics_pax_car_ruleset_position_check_special;
    }

    <!--! if first -->
    switch (FEAT_TRAINS, SELF, switch_graphics_pax_car_ruleset_position_check_first_neighbouring, [STORE_TEMP(-1, 0x10F), var[0x61, 0, 0x0000FFFF, 0xC6]]) {
        <!--! don't show first if preceeding vehicle is also a valid pax car with a different ID -->
        <tal:pax_car_ids repeat="pax_car_id roster_manager.pax_car_ids">
        ${pax_car_id}: return ${default};
        </tal:pax_car_ids>
        return ${first};
    }
    switch (FEAT_TRAINS, SELF, switch_graphics_pax_car_ruleset_position_first_check_length, num_vehs_in_vehid_chain) {
        <!--! don't show 'first' if same id chain < 5 vehicles -->
        0..4: return switch_graphics_pax_car_ruleset_position_default;
        return switch_graphics_pax_car_ruleset_position_check_first_neighbouring;
    }
    switch (FEAT_TRAINS, SELF, switch_graphics_pax_car_ruleset_position_check_first, position_in_vehid_chain) {
        0: return switch_graphics_pax_car_ruleset_position_first_check_length;
        switch_graphics_pax_car_ruleset_position_check_last;
    }

    switch (FEAT_TRAINS, SELF, switch_graphics_pax_car_ruleset, num_vehs_in_vehid_chain) {
        <!--! always show default if same id chain < 2 vehicles -->
        0..1: return switch_graphics_pax_car_ruleset_position_default;
        return switch_graphics_pax_car_ruleset_position_check_first;
    }
</tal:ruleset>

<tal:ruleset define="default 0; first 1; last 2; special 3;">
    // mail car position switches
    switch (FEAT_TRAINS, SELF, switch_graphics_mail_car_ruleset_position_default, 0) {
        return ${default};
    }

    <!--! if special -->
    switch (FEAT_TRAINS, SELF, switch_graphics_mail_car_ruleset_position_special_check_length, num_vehs_in_vehid_chain) {
        <!--! don't show 'special' if same id chain < 4 vehicles -->
        0..3: return switch_graphics_mail_car_ruleset_position_default;
        return ${special};
    }
    switch (FEAT_TRAINS, SELF, switch_graphics_mail_car_ruleset_position_check_special, position_in_vehid_chain_from_end - position_in_vehid_chain) {
        0..1: return switch_graphics_mail_car_ruleset_position_special_check_length;
        switch_graphics_mail_car_ruleset_position_default;
    }

    <!--! if first -->
    switch (FEAT_TRAINS, SELF, switch_graphics_mail_car_ruleset_position_first_check_length, num_vehs_in_vehid_chain) {
        <!--! don't show 'first' if same id chain < 5 vehicles -->
        0..4: return switch_graphics_mail_car_ruleset_position_default;
        return ${first};
    }
    switch (FEAT_TRAINS, SELF, switch_graphics_mail_car_ruleset_position_check_first, position_in_vehid_chain) {
        0: return switch_graphics_mail_car_ruleset_position_first_check_length;
        switch_graphics_mail_car_ruleset_position_check_special;
    }

    <!--! if last -->
    switch (FEAT_TRAINS, SELF, switch_graphics_mail_car_ruleset_position_check_last, position_in_vehid_chain_from_end) {
        0: return ${last};
        switch_graphics_mail_car_ruleset_position_check_first;
    }

    switch (FEAT_TRAINS, SELF, switch_graphics_mail_car_ruleset, 0) {
        return switch_graphics_mail_car_ruleset_position_check_last;
    }
</tal:ruleset>

<tal:ruleset define="default 0; first 1; last 2; special 3;">
    // railcar 4 unit position switches
    <!--! if 1 unit in sequence -->
    switch (FEAT_TRAINS, SELF, switch_graphics_railcar_ruleset_4_unit_sets_modulo_num_units_in_consist_1, LOAD_TEMP(${temp_storage_ids.position_in_vehid_chain_multiple_ids}) % 8) {
        0: return ${default};
    }

    <!--! if 2 units in sequence -->
    switch (FEAT_TRAINS, SELF, switch_graphics_railcar_ruleset_4_unit_sets_modulo_num_units_in_consist_2, LOAD_TEMP(${temp_storage_ids.position_in_vehid_chain_multiple_ids}) % 8) {
        0: return ${first};
        return ${last};
    }

    <!--! if 3 units in sequence -->
    switch (FEAT_TRAINS, SELF, switch_graphics_railcar_ruleset_4_unit_sets_modulo_num_units_in_consist_3, LOAD_TEMP(${temp_storage_ids.position_in_vehid_chain_multiple_ids}) % 8) {
        0: return ${first};
        1: return ${special};
        return ${last};
    }

    <!--! if 4 units in sequence -->
    switch (FEAT_TRAINS, SELF, switch_graphics_railcar_ruleset_4_unit_sets_modulo_num_units_in_consist_4, LOAD_TEMP(${temp_storage_ids.position_in_vehid_chain_multiple_ids}) % 8) {
        0: return ${first};
        1: return ${special};
        2: return ${special};
        return ${last};
    }

    <!--! if 5 units in sequence -->
    switch (FEAT_TRAINS, SELF, switch_graphics_railcar_ruleset_4_unit_sets_modulo_num_units_in_consist_5, LOAD_TEMP(${temp_storage_ids.position_in_vehid_chain_multiple_ids}) % 8) {
        0: return ${first};
        1: return ${special};
        2: return ${last};
        3: return ${first};
        return ${last};
    }

    <!--! if 6 units in sequence -->
    switch (FEAT_TRAINS, SELF, switch_graphics_railcar_ruleset_4_unit_sets_modulo_num_units_in_consist_6, LOAD_TEMP(${temp_storage_ids.position_in_vehid_chain_multiple_ids}) % 8) {
        0: return ${first};
        1: return ${special};
        2: return ${last};
        3: return ${first};
        4: return ${special};
        return ${last};
    }

    <!--! if 7 units in sequence -->
    switch (FEAT_TRAINS, SELF, switch_graphics_railcar_ruleset_4_unit_sets_modulo_num_units_in_consist_7, LOAD_TEMP(${temp_storage_ids.position_in_vehid_chain_multiple_ids}) % 8) {
        0: return ${first};
        1: return ${special};
        2: return ${special};
        3: return ${last};
        4: return ${first};
        5: return ${special};
        return ${last};
    }

    <!--! if 8 units in sequence -->
    switch (FEAT_TRAINS, SELF, switch_graphics_railcar_ruleset_4_unit_sets_modulo_num_units_in_consist_8, LOAD_TEMP(${temp_storage_ids.position_in_vehid_chain_multiple_ids}) % 8) {
        0: return ${first};
        1: return ${special};
        2: return ${special};
        3: return ${last};
        4: return ${first};
        5: return ${special};
        6: return ${special};
        return ${last};
    }

    <!--! this is a remainder block, how many units are in it? -->
    switch (FEAT_TRAINS, SELF, switch_graphics_railcar_ruleset_4_unit_sets_less_than_8_remaining, LOAD_TEMP(${temp_storage_ids.num_vehs_in_vehid_chain_multiple_ids}) % 8) {
        1: return switch_graphics_railcar_ruleset_4_unit_sets_modulo_num_units_in_consist_1;
        2: return switch_graphics_railcar_ruleset_4_unit_sets_modulo_num_units_in_consist_2;
        3: return switch_graphics_railcar_ruleset_4_unit_sets_modulo_num_units_in_consist_3;
        4: return switch_graphics_railcar_ruleset_4_unit_sets_modulo_num_units_in_consist_4;
        5: return switch_graphics_railcar_ruleset_4_unit_sets_modulo_num_units_in_consist_5;
        6: return switch_graphics_railcar_ruleset_4_unit_sets_modulo_num_units_in_consist_6;
        7: return switch_graphics_railcar_ruleset_4_unit_sets_modulo_num_units_in_consist_7;
        return switch_graphics_railcar_ruleset_4_unit_sets_modulo_num_units_in_consist_8;
    }

    <!--! given the consist, how many blocks of 6 units are there?  Is the unit within a block of 6, or a remainder block? -->
    switch (FEAT_TRAINS, SELF, switch_graphics_railcar_ruleset_4_unit_sets, LOAD_TEMP(${temp_storage_ids.position_in_vehid_chain_multiple_ids}) >= (LOAD_TEMP(${temp_storage_ids.num_vehs_in_vehid_chain_multiple_ids}) - (LOAD_TEMP(${temp_storage_ids.num_vehs_in_vehid_chain_multiple_ids})  % 8))) {
        1: return switch_graphics_railcar_ruleset_4_unit_sets_less_than_8_remaining;
        return switch_graphics_railcar_ruleset_4_unit_sets_modulo_num_units_in_consist_8;
    }
</tal:ruleset>

<tal:ruleset define="default 0; first 1; last 2; special 3;">
    // railcar 3 unit position switches
    <!--! if 1 unit in sequence -->
    switch (FEAT_TRAINS, SELF, switch_graphics_railcar_ruleset_3_unit_sets_modulo_num_units_in_consist_1, LOAD_TEMP(${temp_storage_ids.position_in_vehid_chain_multiple_ids}) % 6) {
        0: return ${default};
    }

    <!--! if 2 units in sequence -->
    switch (FEAT_TRAINS, SELF, switch_graphics_railcar_ruleset_3_unit_sets_modulo_num_units_in_consist_2, LOAD_TEMP(${temp_storage_ids.position_in_vehid_chain_multiple_ids}) % 6) {
        0: return ${first};
        return ${last};
    }

    <!--! if 3 units in sequence -->
    switch (FEAT_TRAINS, SELF, switch_graphics_railcar_ruleset_3_unit_sets_modulo_num_units_in_consist_3, LOAD_TEMP(${temp_storage_ids.position_in_vehid_chain_multiple_ids}) % 6) {
        0: return ${first};
        1: return ${special};
        return ${last};
    }

    <!--! if 4 units in sequence -->
    switch (FEAT_TRAINS, SELF, switch_graphics_railcar_ruleset_3_unit_sets_modulo_num_units_in_consist_4, LOAD_TEMP(${temp_storage_ids.position_in_vehid_chain_multiple_ids}) % 6) {
        0: return ${first};
        1: return ${last};
        2: return ${first};
        return ${last};
    }

    <!--! if 5 units in sequence -->
    switch (FEAT_TRAINS, SELF, switch_graphics_railcar_ruleset_3_unit_sets_modulo_num_units_in_consist_5, LOAD_TEMP(${temp_storage_ids.position_in_vehid_chain_multiple_ids}) % 6) {
        0: return ${first};
        1: return ${special};
        2: return ${last};
        3: return ${first};
        return ${last};
    }

    <!--! if 6 units in sequence -->
    switch (FEAT_TRAINS, SELF, switch_graphics_railcar_ruleset_3_unit_sets_modulo_num_units_in_consist_6, LOAD_TEMP(${temp_storage_ids.position_in_vehid_chain_multiple_ids}) % 6) {
        0: return ${first};
        1: return ${special};
        2: return ${last};
        3: return ${first};
        4: return ${special};
        return ${last};
    }

    <!--! this is a remainder block, how many units are in it? -->
    switch (FEAT_TRAINS, SELF, switch_graphics_railcar_ruleset_3_unit_sets_less_than_6_remaining, LOAD_TEMP(${temp_storage_ids.num_vehs_in_vehid_chain_multiple_ids}) % 6) {
        1: return switch_graphics_railcar_ruleset_3_unit_sets_modulo_num_units_in_consist_1;
        2: return switch_graphics_railcar_ruleset_3_unit_sets_modulo_num_units_in_consist_2;
        3: return switch_graphics_railcar_ruleset_3_unit_sets_modulo_num_units_in_consist_3;
        4: return switch_graphics_railcar_ruleset_3_unit_sets_modulo_num_units_in_consist_4;
        5: return switch_graphics_railcar_ruleset_3_unit_sets_modulo_num_units_in_consist_5;
        return switch_graphics_railcar_ruleset_3_unit_sets_modulo_num_units_in_consist_6;
    }

    <!--! given the consist, how many blocks of 6 units are there?  Is the unit within a block of 6, or a remainder block? -->
    switch (FEAT_TRAINS, SELF, switch_graphics_railcar_ruleset_3_unit_sets, LOAD_TEMP(${temp_storage_ids.position_in_vehid_chain_multiple_ids}) >= (LOAD_TEMP(${temp_storage_ids.num_vehs_in_vehid_chain_multiple_ids}) - (LOAD_TEMP(${temp_storage_ids.num_vehs_in_vehid_chain_multiple_ids}) % 6))) {
        1: return switch_graphics_railcar_ruleset_3_unit_sets_less_than_6_remaining;
        return switch_graphics_railcar_ruleset_3_unit_sets_modulo_num_units_in_consist_6;
    }
</tal:ruleset>

<tal:ruleset define="default 0; first 1; last 2;">
    // railcar 3 unit position switches
    <!--! if 1 unit in sequence -->
    switch (FEAT_TRAINS, SELF, switch_graphics_railcar_ruleset_2_unit_sets_modulo_num_units_in_consist_1, LOAD_TEMP(${temp_storage_ids.position_in_vehid_chain_multiple_ids}) % 4) {
        0: return ${default};
    }

    <!--! if 2 units in sequence -->
    switch (FEAT_TRAINS, SELF, switch_graphics_railcar_ruleset_2_unit_sets_modulo_num_units_in_consist_2, LOAD_TEMP(${temp_storage_ids.position_in_vehid_chain_multiple_ids}) % 4) {
        0: return ${first};
        return ${last};
    }

    <!--! if 3 units in sequence -->
    switch (FEAT_TRAINS, SELF, switch_graphics_railcar_ruleset_2_unit_sets_modulo_num_units_in_consist_3, LOAD_TEMP(${temp_storage_ids.position_in_vehid_chain_multiple_ids}) % 4) {
        0: return ${first};
        1: return ${last};
        return ${default};
    }

    <!--! if 4 units in sequence -->
    switch (FEAT_TRAINS, SELF, switch_graphics_railcar_ruleset_2_unit_sets_modulo_num_units_in_consist_4, LOAD_TEMP(${temp_storage_ids.position_in_vehid_chain_multiple_ids}) % 4) {
        0: return ${first};
        1: return ${last};
        2: return ${first};
        return ${last};
    }

    <!--! this is a remainder block, how many units are in it? -->
    switch (FEAT_TRAINS, SELF, switch_graphics_railcar_ruleset_2_unit_sets_less_than_4_remaining, LOAD_TEMP(${temp_storage_ids.num_vehs_in_vehid_chain_multiple_ids}) % 4) {
        1: return switch_graphics_railcar_ruleset_2_unit_sets_modulo_num_units_in_consist_1;
        2: return switch_graphics_railcar_ruleset_2_unit_sets_modulo_num_units_in_consist_2;
        3: return switch_graphics_railcar_ruleset_2_unit_sets_modulo_num_units_in_consist_3;
        return switch_graphics_railcar_ruleset_3_unit_sets_modulo_num_units_in_consist_4;
    }

    <!--! given the consist, how many blocks of 4 units are there?  Is the unit within a block of 4, or a remainder block? -->
    switch (FEAT_TRAINS, SELF, switch_graphics_railcar_ruleset_2_unit_sets, LOAD_TEMP(${temp_storage_ids.position_in_vehid_chain_multiple_ids}) >= (LOAD_TEMP(${temp_storage_ids.num_vehs_in_vehid_chain_multiple_ids}) - (LOAD_TEMP(${temp_storage_ids.num_vehs_in_vehid_chain_multiple_ids}) % 4))) {
        1: return switch_graphics_railcar_ruleset_2_unit_sets_less_than_4_remaining;
        return switch_graphics_railcar_ruleset_2_unit_sets_modulo_num_units_in_consist_4;
    }
</tal:ruleset>

<tal:ruleset define="default 0; last 1;">
    // driving cab position switches
    <!--! only show 'last' if consist has > 1 vehicle - keeps the cab orientated <- when built in depot, matching buy menu -->
    switch (FEAT_TRAINS, SELF, switch_graphics_driving_cab_car_ruleset_position_last_check_length, num_vehs_in_consist) {
        1: return ${default};
        return ${last};
    }

    switch (FEAT_TRAINS, SELF, switch_graphics_driving_cab_car_ruleset, position_in_consist_from_end) {
        0: switch_graphics_driving_cab_car_ruleset_position_last_check_length;
        return ${default};
    }
</tal:ruleset>

<tal:ruleset define="first 0; last 1;">
    // metro position switches
    switch (FEAT_TRAINS, SELF, switch_graphics_metro_ruleset, position_in_vehid_chain % 2) {
        0: return ${first};
        return ${last};
    }
</tal:ruleset>

